[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hpc-sweep-manager"
version = "0.1.0"
description = "Automated hyperparameter sweeps on HPC systems using Hydra configs and W&B tracking"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Gabriel Bena", email = "gabriel.bena@gmail.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
]
keywords = ["hpc", "hyperparameter", "sweep", "hydra", "wandb", "machine-learning"]
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0",
    "jinja2>=3.0.0",
    "rich>=12.0.0",
    "textual>=0.20.0",
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
    "wandb>=0.15.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/hpc-sweep-manager"
Documentation = "https://hpc-sweep-manager.readthedocs.io"
Repository = "https://github.com/yourusername/hpc-sweep-manager"
Changelog = "https://github.com/yourusername/hpc-sweep-manager/blob/main/CHANGELOG.md"

[project.scripts]
hsm = "hpc_sweep_manager.cli.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
hpc_sweep_manager = ["templates/*.j2"]

# Ruff configuration
[tool.ruff]
# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.8+
target-version = "py38"

# Exclude common directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
# Also enable:
# - pyupgrade (UP) - modernize Python code
# - flake8-bugbear (B) - find likely bugs and design problems
# - flake8-simplify (SIM) - simplify code
# - isort (I) - import sorting
select = ["E", "F", "UP", "B", "SIM", "I"]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore checks for possible passwords
    "S105", "S106", "S107",
    # Ignore complexity
    "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["hpc_sweep_manager"]
force-sort-within-sections = true
split-on-trailing-comma = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=hpc_sweep_manager",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
] 